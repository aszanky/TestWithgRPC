// Code generated by protoc-gen-go. DO NOT EDIT.
// source: justmessagepb/justmessage.proto

package justmessagepb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type JustMessage struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Justmessage          string   `protobuf:"bytes,2,opt,name=justmessage,proto3" json:"justmessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JustMessage) Reset()         { *m = JustMessage{} }
func (m *JustMessage) String() string { return proto.CompactTextString(m) }
func (*JustMessage) ProtoMessage()    {}
func (*JustMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9ee5840def3190a, []int{0}
}

func (m *JustMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JustMessage.Unmarshal(m, b)
}
func (m *JustMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JustMessage.Marshal(b, m, deterministic)
}
func (m *JustMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JustMessage.Merge(m, src)
}
func (m *JustMessage) XXX_Size() int {
	return xxx_messageInfo_JustMessage.Size(m)
}
func (m *JustMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_JustMessage.DiscardUnknown(m)
}

var xxx_messageInfo_JustMessage proto.InternalMessageInfo

func (m *JustMessage) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *JustMessage) GetJustmessage() string {
	if m != nil {
		return m.Justmessage
	}
	return ""
}

type MessageRequest struct {
	Yourmessage          *JustMessage `protobuf:"bytes,1,opt,name=yourmessage,proto3" json:"yourmessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MessageRequest) Reset()         { *m = MessageRequest{} }
func (m *MessageRequest) String() string { return proto.CompactTextString(m) }
func (*MessageRequest) ProtoMessage()    {}
func (*MessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9ee5840def3190a, []int{1}
}

func (m *MessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageRequest.Unmarshal(m, b)
}
func (m *MessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageRequest.Marshal(b, m, deterministic)
}
func (m *MessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageRequest.Merge(m, src)
}
func (m *MessageRequest) XXX_Size() int {
	return xxx_messageInfo_MessageRequest.Size(m)
}
func (m *MessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MessageRequest proto.InternalMessageInfo

func (m *MessageRequest) GetYourmessage() *JustMessage {
	if m != nil {
		return m.Yourmessage
	}
	return nil
}

type MessageResponse struct {
	Result               *JustMessage `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MessageResponse) Reset()         { *m = MessageResponse{} }
func (m *MessageResponse) String() string { return proto.CompactTextString(m) }
func (*MessageResponse) ProtoMessage()    {}
func (*MessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9ee5840def3190a, []int{2}
}

func (m *MessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageResponse.Unmarshal(m, b)
}
func (m *MessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageResponse.Marshal(b, m, deterministic)
}
func (m *MessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageResponse.Merge(m, src)
}
func (m *MessageResponse) XXX_Size() int {
	return xxx_messageInfo_MessageResponse.Size(m)
}
func (m *MessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MessageResponse proto.InternalMessageInfo

func (m *MessageResponse) GetResult() *JustMessage {
	if m != nil {
		return m.Result
	}
	return nil
}

type GetAllMessageRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllMessageRequest) Reset()         { *m = GetAllMessageRequest{} }
func (m *GetAllMessageRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllMessageRequest) ProtoMessage()    {}
func (*GetAllMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9ee5840def3190a, []int{3}
}

func (m *GetAllMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllMessageRequest.Unmarshal(m, b)
}
func (m *GetAllMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllMessageRequest.Marshal(b, m, deterministic)
}
func (m *GetAllMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllMessageRequest.Merge(m, src)
}
func (m *GetAllMessageRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllMessageRequest.Size(m)
}
func (m *GetAllMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllMessageRequest proto.InternalMessageInfo

type GetAllMessagesResponse struct {
	Result               *JustMessage `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetAllMessagesResponse) Reset()         { *m = GetAllMessagesResponse{} }
func (m *GetAllMessagesResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllMessagesResponse) ProtoMessage()    {}
func (*GetAllMessagesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9ee5840def3190a, []int{4}
}

func (m *GetAllMessagesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllMessagesResponse.Unmarshal(m, b)
}
func (m *GetAllMessagesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllMessagesResponse.Marshal(b, m, deterministic)
}
func (m *GetAllMessagesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllMessagesResponse.Merge(m, src)
}
func (m *GetAllMessagesResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllMessagesResponse.Size(m)
}
func (m *GetAllMessagesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllMessagesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllMessagesResponse proto.InternalMessageInfo

func (m *GetAllMessagesResponse) GetResult() *JustMessage {
	if m != nil {
		return m.Result
	}
	return nil
}

type LongLiveMessageConnectionRequest struct {
	Yourmessage          *JustMessage `protobuf:"bytes,1,opt,name=yourmessage,proto3" json:"yourmessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *LongLiveMessageConnectionRequest) Reset()         { *m = LongLiveMessageConnectionRequest{} }
func (m *LongLiveMessageConnectionRequest) String() string { return proto.CompactTextString(m) }
func (*LongLiveMessageConnectionRequest) ProtoMessage()    {}
func (*LongLiveMessageConnectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9ee5840def3190a, []int{5}
}

func (m *LongLiveMessageConnectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LongLiveMessageConnectionRequest.Unmarshal(m, b)
}
func (m *LongLiveMessageConnectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LongLiveMessageConnectionRequest.Marshal(b, m, deterministic)
}
func (m *LongLiveMessageConnectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LongLiveMessageConnectionRequest.Merge(m, src)
}
func (m *LongLiveMessageConnectionRequest) XXX_Size() int {
	return xxx_messageInfo_LongLiveMessageConnectionRequest.Size(m)
}
func (m *LongLiveMessageConnectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LongLiveMessageConnectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LongLiveMessageConnectionRequest proto.InternalMessageInfo

func (m *LongLiveMessageConnectionRequest) GetYourmessage() *JustMessage {
	if m != nil {
		return m.Yourmessage
	}
	return nil
}

type LongLiveMessageConnectionResponse struct {
	Result               *JustMessage `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *LongLiveMessageConnectionResponse) Reset()         { *m = LongLiveMessageConnectionResponse{} }
func (m *LongLiveMessageConnectionResponse) String() string { return proto.CompactTextString(m) }
func (*LongLiveMessageConnectionResponse) ProtoMessage()    {}
func (*LongLiveMessageConnectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9ee5840def3190a, []int{6}
}

func (m *LongLiveMessageConnectionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LongLiveMessageConnectionResponse.Unmarshal(m, b)
}
func (m *LongLiveMessageConnectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LongLiveMessageConnectionResponse.Marshal(b, m, deterministic)
}
func (m *LongLiveMessageConnectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LongLiveMessageConnectionResponse.Merge(m, src)
}
func (m *LongLiveMessageConnectionResponse) XXX_Size() int {
	return xxx_messageInfo_LongLiveMessageConnectionResponse.Size(m)
}
func (m *LongLiveMessageConnectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LongLiveMessageConnectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LongLiveMessageConnectionResponse proto.InternalMessageInfo

func (m *LongLiveMessageConnectionResponse) GetResult() *JustMessage {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*JustMessage)(nil), "justmessage.JustMessage")
	proto.RegisterType((*MessageRequest)(nil), "justmessage.MessageRequest")
	proto.RegisterType((*MessageResponse)(nil), "justmessage.MessageResponse")
	proto.RegisterType((*GetAllMessageRequest)(nil), "justmessage.GetAllMessageRequest")
	proto.RegisterType((*GetAllMessagesResponse)(nil), "justmessage.GetAllMessagesResponse")
	proto.RegisterType((*LongLiveMessageConnectionRequest)(nil), "justmessage.LongLiveMessageConnectionRequest")
	proto.RegisterType((*LongLiveMessageConnectionResponse)(nil), "justmessage.LongLiveMessageConnectionResponse")
}

func init() { proto.RegisterFile("justmessagepb/justmessage.proto", fileDescriptor_f9ee5840def3190a) }

var fileDescriptor_f9ee5840def3190a = []byte{
	// 313 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0x4d, 0xc1, 0x81, 0xaf, 0xb8, 0x41, 0x90, 0x51, 0xa6, 0x60, 0x57, 0x2f, 0xbb, 0x58,
	0xcb, 0xbc, 0x79, 0x11, 0xed, 0x61, 0x50, 0xea, 0xa5, 0xe2, 0x45, 0x44, 0xd8, 0xba, 0xc7, 0x88,
	0xb4, 0x49, 0x6d, 0x92, 0x81, 0x27, 0xff, 0x34, 0xff, 0x35, 0x99, 0xeb, 0x66, 0x02, 0xd3, 0x89,
	0x7a, 0xcc, 0xcb, 0xf7, 0x7e, 0xef, 0xe3, 0x4b, 0x1e, 0x1c, 0x3f, 0x69, 0xa9, 0x4a, 0x94, 0x72,
	0x3c, 0xc3, 0x6a, 0x72, 0x66, 0x9c, 0xc2, 0xaa, 0x16, 0x4a, 0x50, 0xd7, 0x28, 0x05, 0x97, 0xe0,
	0x26, 0x5a, 0xaa, 0x9b, 0xe5, 0x91, 0xb6, 0xc1, 0x61, 0x53, 0x8f, 0xf8, 0x64, 0xb0, 0x9b, 0x39,
	0x6c, 0x4a, 0x7d, 0x30, 0xd5, 0x9e, 0xe3, 0x93, 0xc1, 0x5e, 0x66, 0x01, 0x52, 0x68, 0x37, 0xcd,
	0x19, 0x3e, 0x6b, 0x94, 0x8a, 0x5e, 0x80, 0xfb, 0x22, 0x74, 0xbd, 0xea, 0x59, 0xc0, 0xdc, 0xa1,
	0x17, 0x9a, 0x46, 0x8c, 0x91, 0x99, 0x29, 0x0e, 0x62, 0xe8, 0xac, 0x69, 0xb2, 0x12, 0x5c, 0x22,
	0x8d, 0xa0, 0x55, 0xa3, 0xd4, 0x85, 0xda, 0x4a, 0x6a, 0x74, 0x41, 0x17, 0x0e, 0x46, 0xa8, 0xae,
	0x8a, 0xc2, 0x36, 0x16, 0x24, 0xd0, 0xb5, 0xea, 0xf2, 0x0f, 0x33, 0x1e, 0xc1, 0x4f, 0x05, 0x9f,
	0xa5, 0x6c, 0x8e, 0xcd, 0x55, 0x2c, 0x38, 0xc7, 0x5c, 0x31, 0xc1, 0xff, 0x23, 0x88, 0x3b, 0xe8,
	0x7f, 0xc3, 0xff, 0xad, 0xed, 0xe1, 0x9b, 0x03, 0xd4, 0xa8, 0xdf, 0x62, 0x3d, 0x67, 0x39, 0xd2,
	0xc4, 0xfe, 0x05, 0x87, 0x16, 0xc7, 0x4e, 0xb1, 0x77, 0xb4, 0xf9, 0x72, 0x69, 0x29, 0xd8, 0xa1,
	0x0f, 0xd0, 0xb6, 0x53, 0xa6, 0x7d, 0xab, 0x63, 0xd3, 0xd3, 0xf4, 0x4e, 0xbe, 0x96, 0xc8, 0x4f,
	0x76, 0x44, 0xe8, 0x2b, 0x78, 0x23, 0x54, 0xb1, 0x28, 0x4b, 0xcd, 0x59, 0x3e, 0x5e, 0xc4, 0xb1,
	0x9e, 0x73, 0x6a, 0x41, 0xb6, 0x3d, 0x4f, 0x2f, 0xfc, 0xa9, 0x7c, 0x35, 0x7e, 0x40, 0x22, 0x72,
	0xdd, 0xb9, 0xdf, 0xb7, 0x16, 0x6c, 0xd2, 0xfa, 0xd8, 0xaa, 0xf3, 0xf7, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x26, 0x44, 0x4d, 0x13, 0x78, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// JustMessageServiceClient is the client API for JustMessageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JustMessageServiceClient interface {
	//Just like ordinary API (REST) Request Response only
	JustMessage(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*MessageResponse, error)
	//Get all Messages with Server streaming gRPC
	GetAllMessages(ctx context.Context, in *GetAllMessageRequest, opts ...grpc.CallOption) (JustMessageService_GetAllMessagesClient, error)
	//Stream long live connection
	GetCommunicationMessages(ctx context.Context, opts ...grpc.CallOption) (JustMessageService_GetCommunicationMessagesClient, error)
}

type justMessageServiceClient struct {
	cc *grpc.ClientConn
}

func NewJustMessageServiceClient(cc *grpc.ClientConn) JustMessageServiceClient {
	return &justMessageServiceClient{cc}
}

func (c *justMessageServiceClient) JustMessage(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*MessageResponse, error) {
	out := new(MessageResponse)
	err := c.cc.Invoke(ctx, "/justmessage.JustMessageService/JustMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *justMessageServiceClient) GetAllMessages(ctx context.Context, in *GetAllMessageRequest, opts ...grpc.CallOption) (JustMessageService_GetAllMessagesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_JustMessageService_serviceDesc.Streams[0], "/justmessage.JustMessageService/GetAllMessages", opts...)
	if err != nil {
		return nil, err
	}
	x := &justMessageServiceGetAllMessagesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type JustMessageService_GetAllMessagesClient interface {
	Recv() (*GetAllMessagesResponse, error)
	grpc.ClientStream
}

type justMessageServiceGetAllMessagesClient struct {
	grpc.ClientStream
}

func (x *justMessageServiceGetAllMessagesClient) Recv() (*GetAllMessagesResponse, error) {
	m := new(GetAllMessagesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *justMessageServiceClient) GetCommunicationMessages(ctx context.Context, opts ...grpc.CallOption) (JustMessageService_GetCommunicationMessagesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_JustMessageService_serviceDesc.Streams[1], "/justmessage.JustMessageService/GetCommunicationMessages", opts...)
	if err != nil {
		return nil, err
	}
	x := &justMessageServiceGetCommunicationMessagesClient{stream}
	return x, nil
}

type JustMessageService_GetCommunicationMessagesClient interface {
	Send(*LongLiveMessageConnectionRequest) error
	Recv() (*LongLiveMessageConnectionResponse, error)
	grpc.ClientStream
}

type justMessageServiceGetCommunicationMessagesClient struct {
	grpc.ClientStream
}

func (x *justMessageServiceGetCommunicationMessagesClient) Send(m *LongLiveMessageConnectionRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *justMessageServiceGetCommunicationMessagesClient) Recv() (*LongLiveMessageConnectionResponse, error) {
	m := new(LongLiveMessageConnectionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// JustMessageServiceServer is the server API for JustMessageService service.
type JustMessageServiceServer interface {
	//Just like ordinary API (REST) Request Response only
	JustMessage(context.Context, *MessageRequest) (*MessageResponse, error)
	//Get all Messages with Server streaming gRPC
	GetAllMessages(*GetAllMessageRequest, JustMessageService_GetAllMessagesServer) error
	//Stream long live connection
	GetCommunicationMessages(JustMessageService_GetCommunicationMessagesServer) error
}

// UnimplementedJustMessageServiceServer can be embedded to have forward compatible implementations.
type UnimplementedJustMessageServiceServer struct {
}

func (*UnimplementedJustMessageServiceServer) JustMessage(ctx context.Context, req *MessageRequest) (*MessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JustMessage not implemented")
}
func (*UnimplementedJustMessageServiceServer) GetAllMessages(req *GetAllMessageRequest, srv JustMessageService_GetAllMessagesServer) error {
	return status.Errorf(codes.Unimplemented, "method GetAllMessages not implemented")
}
func (*UnimplementedJustMessageServiceServer) GetCommunicationMessages(srv JustMessageService_GetCommunicationMessagesServer) error {
	return status.Errorf(codes.Unimplemented, "method GetCommunicationMessages not implemented")
}

func RegisterJustMessageServiceServer(s *grpc.Server, srv JustMessageServiceServer) {
	s.RegisterService(&_JustMessageService_serviceDesc, srv)
}

func _JustMessageService_JustMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JustMessageServiceServer).JustMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/justmessage.JustMessageService/JustMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JustMessageServiceServer).JustMessage(ctx, req.(*MessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JustMessageService_GetAllMessages_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetAllMessageRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(JustMessageServiceServer).GetAllMessages(m, &justMessageServiceGetAllMessagesServer{stream})
}

type JustMessageService_GetAllMessagesServer interface {
	Send(*GetAllMessagesResponse) error
	grpc.ServerStream
}

type justMessageServiceGetAllMessagesServer struct {
	grpc.ServerStream
}

func (x *justMessageServiceGetAllMessagesServer) Send(m *GetAllMessagesResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _JustMessageService_GetCommunicationMessages_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(JustMessageServiceServer).GetCommunicationMessages(&justMessageServiceGetCommunicationMessagesServer{stream})
}

type JustMessageService_GetCommunicationMessagesServer interface {
	Send(*LongLiveMessageConnectionResponse) error
	Recv() (*LongLiveMessageConnectionRequest, error)
	grpc.ServerStream
}

type justMessageServiceGetCommunicationMessagesServer struct {
	grpc.ServerStream
}

func (x *justMessageServiceGetCommunicationMessagesServer) Send(m *LongLiveMessageConnectionResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *justMessageServiceGetCommunicationMessagesServer) Recv() (*LongLiveMessageConnectionRequest, error) {
	m := new(LongLiveMessageConnectionRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _JustMessageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "justmessage.JustMessageService",
	HandlerType: (*JustMessageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "JustMessage",
			Handler:    _JustMessageService_JustMessage_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetAllMessages",
			Handler:       _JustMessageService_GetAllMessages_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetCommunicationMessages",
			Handler:       _JustMessageService_GetCommunicationMessages_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "justmessagepb/justmessage.proto",
}
